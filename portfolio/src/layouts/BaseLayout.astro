---
import Container from '../components/Container.astro';
import Navbar from '../components/Navbar.astro';
import Footer from '../components/Footer.astro';

interface Props {
  title: string;
  description?: string;
}

const { 
  title, 
  description = "Portfolio personal de iadev - Desarrollador Full Stack" 
} = Astro.props;
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="min-h-screen flex flex-col bg-white text-black dark:bg-black dark:text-white">
    <Navbar />

    <!-- Contenido principal -->
    <main class="flex-grow">
      <Container>
        <slot />
      </Container>
    </main>

    <Footer />

    <script is:inline>
      // Check for saved theme preference, otherwise use system preference
      const theme = (() => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          return 'dark';
        }
        return 'light';
      })();
    
      if (theme === 'light') {
        document.documentElement.classList.remove('dark');
      } else {
        document.documentElement.classList.add('dark');
      }
    
      window.localStorage.setItem('theme', theme);
    </script>
  </body>
</html>

<style is:global>
  /* Asegura transiciones suaves al cambiar entre modo claro y oscuro */
  :root {
    color-scheme: light dark;
  }
  
  * {
    transition: background-color 0.3s ease, border-color 0.3s ease, color 0.3s ease;
  }
</style> 