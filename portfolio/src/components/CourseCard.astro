---
import Button from './Button.astro';
import View from '../icons/View.astro';
import Code from '../icons/Code.astro';
import Clock from '../icons/Clock.astro';
import CreatorTag from './CreatorTag.astro';

interface Props {
  title: string
  creator: string
  duration: string
  description: string
  image: string
  liveUrl?: string
  codeUrl?: string
  technologies: Array<{
    icon: any
    name: string
  }>
}

const { 
  title, 
  creator,
  duration,
  description, 
  image, 
  liveUrl, 
  codeUrl,
  technologies 
} = Astro.props;
---

<article class="grid grid-cols-1 md:grid-cols-[1fr,1fr] gap-8 md:gap-16">
  <div class="flex flex-col">
    <img 
      src={image} 
      alt={`Captura de pantalla del curso ${title}`}
      class="rounded-2xl aspect-video object-cover w-full"
    />
  </div>

  <div class="flex flex-col items-start">
    <h3 class="text-2xl font-semibold">{title}</h3>
    
    <div class="flex items-center gap-x-4 mt-4">
      <CreatorTag creator={creator} />
      <div class="flex items-center gap-x-2 text-black/70 dark:text-white/70">
        <Clock class="size-5" />
        <span>{duration} horas</span>
      </div>
    </div>

    <p class="text-base text-black/70 dark:text-white/70 mt-4">
      {description}
    </p>

    <div class="flex gap-x-4 mt-8">
      {liveUrl && (
        <Button href={liveUrl}>
          See
          <View class="size-5" />
        </Button>
      )}
      
      {codeUrl && (
        <Button href={codeUrl} variant="outline">
          Code
          <Code class="size-5" />
        </Button>
      )}
    </div>

    <footer class="flex gap-x-4 mt-8">
      {technologies.map(tech => (
        <tech.icon 
          class="size-8 text-black/70 hover:text-black dark:text-white/70 dark:hover:text-white transition-colors" 
          title={tech.name}
        />
      ))}
    </footer>
  </div>
</article> 